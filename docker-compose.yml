services:
  db:
    image: postgres:15
    container_name: bluesky-db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d

  api:
    build: ./api
    container_name: bluesky-api
    command: gunicorn -b 0.0.0.0:8000 app:app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db

  scraper:
    build: ./scraper
    image: bluesky-scraper:latest
    container_name: bluesky-scraper
    command: python runner.py
    env_file:
      - .env
    depends_on:
      - db
    
  frontend:
    build: ./frontend
    container_name: bluesky-frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env.local
    depends_on:
      - api

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: bluesky-airflow-web
    restart: always
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
    depends_on:
      - db
    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true &&
      airflow webserver
      "

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    container_name: bluesky-airflow-scheduler
    restart: always
    env_file:
      - .env
    volumes:
      - ./dags:/opt/airflow/dags
      - airflow_logs:/opt/airflow/logs
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - db
    command: >
      bash -c "
      airflow db init &&
      airflow db migrate &&
      airflow scheduler
      "

volumes:
  db_data:
  airflow_logs:
